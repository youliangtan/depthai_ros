<?xml version="1.0"?>
<!-- ROS2 launch for depthai_ros_driver -->

<launch>
  <arg name="ns" default="depthai"/>
  <arg name="node_name" default="driver"/>
  <arg name="queue_size" default="1"/>
  <arg name="camera_name" default="bw1097"/>

  <!-- These are not in used by the node in the original code, TODO: Clarify -->
  <arg name="camera_param_uri" default="package://depthai_ros_driver/params/camera/"
    description = "Location of parameters is {camera_param_uri}/{camera_name}/{stream}.yaml"/>
  <arg name="cmd_file" default="$(find-pkg-share depthai_ros_driver)/resources/depthai.cmd"/>
  <!-- end -->

  <arg name="calibration_file" default="$(find-pkg-share depthai_ros_driver)/resources/calibration/$(var camera_name)/depthai.calib"/>
  <arg name="blob_file" default="$(find-pkg-share depthai_ros_driver)/resources/mobilenet_ssd.blob"/>
  <arg name="blob_file_config" default="$(find-pkg-share depthai_ros_driver)/resources/mobilenet-ssd.json"/>

  <arg name="force_usb2" default="false"/>
  <arg name="sync_video_meta" default="false"/>
  <arg name="compute_bbox_depth" default="false"/>
  <arg name="full_fov_nn" default="true"/>

  <arg name="rgb_height" default="1080"/>
  <arg name="rgb_fps" default="30"/>
  <arg name="depth_height" default="720"/>
  <arg name="depth_fps" default="30"/>
  <arg name="shaves" default="14"/>
  <arg name="cmx_slices" default="14"/>
  <arg name="nn_engines" default="2"/>

  <arg name="use_gdb" default="false"/>
  
  <arg name="launch_prefix" default="/usr/bin/gdb -/- args" if="$(var use_gdb)"/>
  <arg name="launch_prefix" default="" unless="$(var use_gdb)"/>

  <!--
  Possible streams:
  * 'left' - left mono camera preview
  * 'right' - right mono camera preview
  * 'previewout' - preview of stream sent to the NN
  * 'metaout' - CNN output tensors
  * 'depth' - the raw depth map, disparity converted to real life distance
  * 'disparity' - disparity map, the diaparity between left and right cameras, in pixels
  * 'disparity_color' - disparity map colorized
  * 'meta_d2h' - device metadata stream
  * 'video' - H.264/H.265 encoded color camera frames
  * 'jpegout' - JPEG encoded color camera frames
  * 'object_tracker' - Object tracker results
  -->

  <arg name="stream_list" default="[left, right, metaout, previewout, disparity, disparity_color, depth, video]"/>

  <group>
    <node pkg="depthai_ros_driver" exec="depthai_ros_driver_node" name="$(var node_name)"
      namespace="$(var ns)" output="screen" launch-prefix="$(var launch_prefix)">
      <param name="camera_name" value="$(var camera_name)"/>

      <param name="cmd_file" value="$(var cmd_file)"/>
      <param name="calibration_file" value="$(var calibration_file)"/>
      <param name="blob_file" value="$(var blob_file)"/>
      <param name="blob_file_config" value="$(var blob_file_config)"/>
      <param name="stream_list" value="$(var stream_list)"/>
      
      <param name="sync_video_meta" value="$(var sync_video_meta)"/>
      <param name="compute_bbox_depth" value="$(var compute_bbox_depth)"/>
      <param name="full_fov_nn" value="$(var full_fov_nn)"/>
      <param name="force_usb2" value="$(var force_usb2)"/>

      <param name="depth_fps" value="$(var depth_fps)"/>
      <param name="depth_height" value="$(var depth_height)"/>
      <param name="rgb_fps" value="$(var rgb_fps)"/>
      <param name="rgb_height" value="$(var rgb_height)"/>

      <param name="shaves" value="$(var shaves)"/>
      <param name="cmx_slices" value="$(var cmx_slices)"/>
      <param name="nn_engines" value="$(var nn_engines)"/>

      <param name="queue_size" value="$(var queue_size)"/>
    </node>
  </group>

  <node name="robot_state_publisher" pkg="robot_state_publisher" exec="robot_state_publisher">
    <param name="tf_prefix" value=""/>
    <param name="robot_description"
      value="$(command 'xacro 
        $(find-pkg-share depthai_ros_driver)/urdf/$(var camera_name).urdf.xacro')"/>
  </node>
</launch>
